name: Create Branch, Tag Release, and Raise Pull Request

on:
  workflow_dispatch:
    inputs:
      branchName:
        description: 'Name of the new branch'
        required: true

jobs:
  create-branch-tag-and-pr:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Set up Git
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"

    - name: Fetch All Branches
      run: git fetch --all
      
    - name: List Existing Branches (Before)
      run: git branch -a
        
    - name: Check if Branch Exists
      id: check_branch
      run: |
        NEW_BRANCH_NAME="${{ github.event.inputs.branchName }}"
        if git show-ref --quiet "refs/heads/$NEW_BRANCH_NAME"; then
          echo "Branch $NEW_BRANCH_NAME already exists."
          echo "::set-output name=branch_exists::true"
        else
          echo "Branch $NEW_BRANCH_NAME does not exist."
          echo "::set-output name=branch_exists::false"
        fi
    
    - name: Create or Update Branch
      run: |
        NEW_BRANCH_NAME="${{ github.event.inputs.branchName }}"
        if [ "${{ steps.check_branch.outputs.branch_exists }}" == 'false' ]; then
          # Create a new branch based on the main branch
          git checkout -b $NEW_BRANCH_NAME origin/main
          # Make changes or perform other actions if needed
          # Push the new branch to the repository
          git push origin $NEW_BRANCH_NAME
        else
          # If the branch already exists, fetch, checkout, pull, and update it
          git fetch origin main
          git checkout $NEW_BRANCH_NAME
          git merge origin/main
          git push origin $NEW_BRANCH_NAME
        fi

    - name: List Existing Branches (After)
      run: git branch -a
    # - name: Get Version from Code
    #   id: version
    #   run: |
    #     # Extract version from your code (replace this with the actual command)
    #     VERSION=$(cat version.txt)
    #     echo "Version: $VERSION"
    #     echo "::set-output name=version::$VERSION"

    # - name: Check if Tag Exists
    #   id: check_tag
    #   run: |
    #     TAG_NAME="v${{ steps.version.outputs.version }}"
    #     if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
    #       echo "Tag $TAG_NAME already exists. Deleting..."
    #       git tag -d "$TAG_NAME"
    #       git push origin --delete "$TAG_NAME"
    #       echo "::set-output name=tag_exists::true"
    #     else
    #       echo "Tag $TAG_NAME does not exist."
    #       echo "::set-output name=tag_exists::false"
    #     fi

    # - name: Create Tag and Push
    #   if: steps.check_tag.outputs.tag_exists == 'false'
    #   run: |
    #     # Get the version from the previous step
    #     VERSION="${{ steps.version.outputs.version }}"
    #     # Create a tag based on the version
    #     git tag -a "v$VERSION" -m "Version $VERSION"
    #     # Push the tag to the repository
    #     git push origin "v$VERSION"

    # - name: Create Pull Request
    #   run: |
    #     gh pr create --base main --head ${{ github.event.inputs.branchName }} --title "Create/Update branch: ${{ github.event.inputs.branchName }}" --body "This pull request was automatically created by GitHub Actions."
    #   env:
    #       # INPUT_BRANCHNAME: ${{ github.event.inputs.branchName }}
    #     GH_TOKEN: ${{ secrets.GIT_HUB_PAT}}