name: CBRPR

on:
  workflow_dispatch:
    inputs:
      branchName:
        description: 'Name of the new branch Eg: release/DDMMYY'
        type : string

        required: true

jobs:
  create-branch-and-pr:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Set up Git
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"
        
    - name: Create and Push Branch
      run: |
        # Get the new branch name from the workflow input
        NEW_BRANCH_NAME="${{ github.event.inputs.branchName }}"
        
        # Create a new branch based on the main branch
        git checkout -b $NEW_BRANCH_NAME
        
        # Make changes or perform other actions if needed
        
        # Push the new branch to the repository
        git push origin $NEW_BRANCH_NAME

    - name: Get Version from Code
      id: artifact_version
      run: |
        # Extract version from your code (replace this with the actual command)
        ARTIFACT_VERSION=$(cat gradle.properties)
        echo "artifact_version: $ARTIFACT_VERSION"
        echo "::set-output name=artifact_version::$ARTIFACT_VERSION"
    
    - name: Create Tag and Push
      run: |
        # Get the version from the previous step
        ARTIFACT_VERSION="${{ steps.version.outputs.artifact_version }}"
        
        # Create a tag based on the version
        git tag -a "v$ARTIFACT_VERSION" -m "artifact_version $ARTIFACT_VERSION"
        
        # Push the tag to the repository
        git push origin "v$ARTIFACT_VERSION"

    - name: Create Pull Request
      run: |
        gh pr create --base main --head ${{ github.event.inputs.branchName }} --title "Develop to: ${{ github.event.inputs.branchName }}" --body "This pull request was automatically created by GitHub Actions on release day."
      env:
            # INPUT_BRANCHNAME: ${{ github.event.inputs.branchName }}
        GH_TOKEN: ${{ secrets.GIT_HUB_PAT}}
