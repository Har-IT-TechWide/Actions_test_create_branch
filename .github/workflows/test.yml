name: ATRPR-1
on:
  workflow_dispatch:
    inputs:
      branchName:
        description: 'Name of the new branch Eg: release/DDMMYY'
        type: string
        required: true

jobs:
  create-branch-and-pr:
    runs-on: ubuntu-latest
    
    outputs:
      id: outputs
      value:
        tagExists: false
        version: ''

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Set up Git
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"
    
    - name: Update Existing Branch or Create New Branch
      run: |
        NEW_BRANCH_NAME="${{ github.event.inputs.branchName }}"
        BASE_BRANCH="develop" # Change this to the desired base branch

        if git rev-parse --verify "refs/heads/$NEW_BRANCH_NAME" >/dev/null 2>&1; then
          echo "Branch $NEW_BRANCH_NAME already exists. Updating with the latest changes from $BASE_BRANCH."
          git checkout $NEW_BRANCH_NAME
          git pull origin $BASE_BRANCH
          git push origin $NEW_BRANCH_NAME --force
        else
          echo "Creating a new branch: $NEW_BRANCH_NAME based on $BASE_BRANCH."
          git checkout -b $NEW_BRANCH_NAME $BASE_BRANCH
          git push origin $NEW_BRANCH_NAME --force
        fi
        
    - name: Check if Tag exists
      id: check-tag
      run: |
        VERSION=$(cat gradle.properties | grep 'artifactory_version' | cut -d'=' -f2)

        if git rev-parse "v$VERSION" >/dev/null 2>&1; then
          echo "Tag v$VERSION already exists. Deleting the existing tag."
          git tag -d "v$VERSION"
          git push --delete origin "v$VERSION"
          echo "tagExists=true" >> $GITHUB_ENV
        else
          echo "No existing tag found for v$VERSION."
          echo "tagExists=false" >> $GITHUB_ENV
        fi

    - name: Get Version from Code
      id: version
      run: |
        VERSION=$(cat gradle.properties | grep 'artifactory_version' | cut -d'=' -f2)
        echo "Version=$VERSION" >> $GITHUB_ENV
    
    - name: Create Tag and Push
      if: env.outputs.tagExists != 'true'
      run: |
        VERSION="${{ env.VERSION }}"

        git tag -a "v$VERSION" -m "Version $VERSION"
        git push origin "v$VERSION" --force

    - name: Check if PR exists
      id: check-pr
      run: |
        NEW_BRANCH_NAME="${{ github.event.inputs.branchName }}"

        PR_EXISTS=$(gh pr list --base main --head "$NEW_BRANCH_NAME" --json number -q '.[].number')

        if [ -n "$PR_EXISTS" ]; then
          echo "Pull request already exists for $NEW_BRANCH_NAME. PR Number: $PR_EXISTS"
          echo "prExists=true" >> $GITHUB_ENV
        else
          echo "No existing pull request found for $NEW_BRANCH_NAME."
          echo "prExists=false" >> $GITHUB_ENV
        fi

    - name: Create Pull Request
      if: env.outputs.prExists != 'true'
      run: |
        gh pr create --base main --head ${{ github.event.inputs.branchName }} --title "Develop to: ${{ github.event.inputs.branchName }}" --body "This pull request was automatically created by GitHub Actions on release day."
